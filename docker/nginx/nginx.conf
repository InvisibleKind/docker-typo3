server {
    listen 80 default;

    client_max_body_size 108M;

    server_name $hostname;

    charset utf-8;

    root /var/www/docker-typo3/web;
    index index.html index.htm index.php;

   	# GZip Configuration for the entire Server Block
    gzip on;
    gzip_vary on;
    gzip_min_length 500;
    gzip_comp_level 5;
    gzip_proxied any;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # This tells Nginx to cache open file handles, "not found" errors, metadata about files and their permissions, etc.
    #
    # The upside of this is that Nginx can immediately begin sending data when a popular file is requested,
    # and will also know to immediately send a 404 if a file is missing on disk, and so on.
    #
    # However, it also means that the server won't react immediately to changes on disk, which may be undesirable.
    #
    # In the below configuration, inactive files are released from the cache after 20 seconds, whereas
    # active (recently requested) files are re-validated every 30 seconds.
    #
    # Descriptors will not be cached unless they are used at least 2 times within 20 seconds (the inactive time).
    #
    # A maximum of the 1000 most recently used file descriptors can be cached at any time.
    #
    # Production servers with stable file collections will definitely want to enable the cache.
    open_file_cache          max=1000 inactive=20s;
    open_file_cache_valid    30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors   on;

    # The X-Frame-Options header indicates whether a browser should be allowed
    # to render a page within a frame or iframe.
    add_header X-Frame-Options SAMEORIGIN always;

    # MIME type sniffing security protection
    #	There are very few edge cases where you wouldn't want this enabled.
    add_header X-Content-Type-Options nosniff always;

    # The X-XSS-Protection header is used by Internet Explorer version 8+
    # The header instructs IE to enable its inbuilt anti-cross-site scripting filter.
    add_header X-XSS-Protection "1; mode=block" always;

    # Force the latest IE version
    add_header "X-UA-Compatible" "IE=Edge";

    # Rewrite php-rule
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
    location = /robots.txt  {
        access_log off;
        log_not_found off;
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        #add_header Access-Control-Allow-Origin *;
        #add_header Vary Accept-Encoding;
        add_header Cache-Control "public";

        # Do not log assets
        access_log off;

        #try_files $uri =404;
    }

    # CSS and Javascript
    location ~* \.(?:css|js)$ {
        expires 1y;
        access_log off;

        #try_files $uri =404;
    }

    # Cross domain webfont access
    location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;

      # Also, set cache rules for webfonts.
      #
      # See http://wiki.nginx.org/HttpCoreModule#location
      # And https://github.com/h5bp/server-configs/issues/85
      # And https://github.com/h5bp/server-configs/issues/86
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
    }

    location ~ \.php$ {
        fastcgi_pass typo3-php-fpm:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        include fastcgi_params;
    }

    if (!-e $request_filename){
        rewrite ^/(.+)\.(\d+)\.(php|js|css|png|jpg|gif|gzip)$ /$1.$3 last;
    }
    # This will route all requests for /css/style.20120716.css to /css/style.css
    #location ~* (.+)\.(?:\d+)\.(js|css|png|jpg|jpeg|gif)$ {
    #  try_files $uri $1.$2;
    #}

    # Deny TYPO3-Specific folder access
    location ~ _(?:recycler|temp)_/ {
        deny all;
    }
    location ~ fileadmin/templates/.*\.(?:txt|ts)$ {
        deny all;
    }
    location ~ ^/(?:vendor|typo3temp/var) {
        deny all;
    }
    location ~ (?:typo3conf/ext|typo3/sysext|typo3/ext)/[^/]+/(?:Configuration|Resources/Private|Tests?|Documentation|docs?)/ {
        deny all;
    }
    location ~ /(?i:^\.|^#.*#|^(?:ChangeLog|ToDo|Readme|License)(?:\.md|\.txt)?|^composer\.(?:json|lock)|^ext_conf_template\.txt|^ext_typoscript_constants\.txt|^ext_typoscript_setup\.txt|flexform[^.]*\.xml|locallang[^.]*\.(?:xml|xlf)|\.(?:bak|co?nf|cfg|ya?ml|ts|dist|fla|in[ci]|log|sh|sql(?:\..*)?|sw[op]|git.*)|.*(?:~|rc))$ {
    	deny all;
    }

    # Stop rewrite processing, if we are in the typo3/ directory or any other known directory
    # NOTE: Add your additional local storages here
    location ~* ^/(typo3/|fileadmin/|typo3conf/|typo3temp/|uploads/|favicon\.ico) {
    }

    # Prevent clients from accessing hidden files (starting with a dot)
    # This is particularly important if you store .htpasswd files in the site hierarchy
    # Access to `/.well-known/` is allowed.
    # https://www.mnot.net/blog/2010/04/07/well-known
    # https://tools.ietf.org/html/rfc5785
    location ~* /\.(?!well-known\/) {
      deny all;
    }
}
